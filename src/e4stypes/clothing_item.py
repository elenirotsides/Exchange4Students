from decimal import Decimal
from enum import Enum

from .item import Item

import pymongo

# establish connection with database
myclient = pymongo.MongoClient('mongodb://localhost:27017/')
# create the databse if it doesn't already exist
db = myclient.exchange4students

# create clothing collection if it doesn't already exist
clothing_col = db.clothing


class ClothingGender(Enum):
    UNISEX = 0
    FEMALE = 1
    MALE = 2


class ClothingSize(Enum):
    SMALL = 0
    MEDIUM = 1
    LARGE = 2
    EXTRA_LARGE = 3


class ClothingItem(Item):
    def __init__(self, item_id: str, title: str, desc: str, price: Decimal,
                 weight: float, seller: str, garment_type: str,
                 size: ClothingSize, gender: ClothingGender, color: str):
        super().__init__(item_id, title, desc, price, weight, seller)
        self._garment_type = garment_type
        self._size = size
        self._gender = gender
        self._color = color

    def get_garment_type(self) -> str:
        return self._garment_type

    def get_size(self) -> ClothingSize:
        return self._size

    def get_gender(self) -> ClothingGender:
        return self._gender

    def get_color(self) -> str:
        return self._color

    @classmethod
    def add_item(cls, clothing: ClothingItem) -> type(None):
        # create clothing dict that will be added to the database
        # id will be generated by mongo
        clothing = {
            'title': clothing.get_title(),
            'description': clothing.get_desc(),
            'price': clothing.get_price(),
            'weight': clothing.get_weight(),
            'seller': clothing.get_seller(),
            'garment_type': clothing.get_garment_type(),
            'size': clothing.get_size(),
            'gender': clothing.get_gender(),
            'color': clothing.get_color()
        }

        # making insertion
        clothing_col.insert_one(clothing)
