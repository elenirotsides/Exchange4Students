from decimal import Decimal
from typing import List

from item import Item
import pymongo

# establish connection with database
myclient = pymongo.MongoClient('mongodb://localhost:27017/')
# create the databse if it doesn't already exist
db = myclient.exchange4students

# create electronic collection if it doesn't already exist
electronic_col = db.electronic


class ElectronicItem(Item):
    def __init__(self, item_id: str, title: str, desc: str, price: Decimal,
                 weight: float, seller: str, electronic_type: str, model: str,
                 dimensions: List[int]):
        super().__init__(item_id, title, desc, price, weight, seller)

        # Private instance attributes
        self._electronic_type: str = electronic_type
        self._model: str = model
        self._dimensions: List[int] = dimensions

    def get_electronic_type(self) -> str:
        return self._electronic_type

    def get_model(self) -> str:
        return self._model

    def get_dimensions(self) -> List[int]:
        return self._dimensions

    @classmethod
    def add_electronic(cls, title: str, desc: str, price: Decimal,
                       weight: float, seller: str, electronic_type: str,
                       model: str, dimensions: List[int]):
        # create electronic dict that will be added to the database
        # id will be generated by mongo
        electronic = {
            'title': title,
            'description': desc,
            'price': price,
            'weight': weight,
            'seller': seller,
            'electronic_type': electronic_type,
            'model': model,
            'dimensions': dimensions
        }

        # making insertion
        inserted_electronic = electronic_col.insert_one(electronic)
        # not sure what needs to be returned here?
        return inserted_electronic
